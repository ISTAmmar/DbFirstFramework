@using Sigma.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="logo">
    <a href="#">
        <img src="~/Images/layout/logo-big.png" alt=""/>
    </a>
</div>

<div class="content">
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h3 class="form-title">Sign In</h3>
        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button>
            <span>
                Enter any username and password.
            </span>
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Username</label>
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-solid placeholder-no-fix", placeholder = "Username" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Password</label>
            @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-solid placeholder-no-fix", placeholder = "Password" })
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>
        <div class="form-actions">
            <input type="submit" value="Login" class="btn btn-success uppercase"/>
            <label class="rememberme check">
                @Html.CheckBoxFor(m => m.RememberMe)
                Remember
            </label>
            @(Html.ActionLink("Forgot Password?", "ForgotPassword", "Account", null, new { @class = "forget-password" }))
        </div>
        <div class="create-account">
            <p>
                @Html.ActionLink("Create an account", "Register", "Account", null, new { @class = "uppercase" })
            </p>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
