@model Sigma.ViewModels.RoleViewModel

@{
    ViewBag.Title = "Create-Update Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string btnText = Model.Role.Id > 0 ? "Update" : "Create";
}

<div class="page-content">
    @using (Html.BeginForm("Create", "Role", new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
    {
        @Html.AntiForgeryToken()
        <h3 class="form-title">Add/Update Role</h3>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(m => m.Role.Id)
        <div class="row">
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Role.Name, new {@class = "form-control form-control-solid", placeholder = "Role Name"})
                @Html.ValidationMessageFor(m => m.Role.Name, "", new {@class = "text-danger"})
            </div>
            <div class="col-md-3">
                <input type="submit" value="@btnText" class="btn btn-success uppercase" />
            </div>
        </div>
        
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}