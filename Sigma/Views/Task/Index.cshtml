@model Sigma.ViewModels.TaskViewModel

@{
    ViewBag.Title = "Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content">
    <h3 data-bind="text: header"></h3>
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Task Name</th>
                <th>Status</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Progress</th>
                <th>Task Priority</th>
                <th>Parent Task</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var taskk in Model.Taskks)
            {
                <tr>
                    <td>@taskk.TaskName</td>
                    <td>
                        @{
                            switch (taskk.Status)
                            {
                                case (short)Models.Common.TaskStatus.Pending:
                                    @:Pending
                                        break;
                                case (short)Models.Common.TaskStatus.OnGoing:
                                    @:On Going
                                        break;
                                case (short)Models.Common.TaskStatus.Completed:
                                    @:Completed
                                        break;
                            }
                        }
                    </td>
                    <td>@taskk.StartDate</td>
                    <td>@taskk.EndDate</td>
                    <td>@taskk.Progress</td>
                    <td>
                        @{
                            switch (taskk.TaskPriority)
                            {
                                case (short)Models.Common.TaskPriority.Low:
                                    @:Low
                                        break;
                                case (short)Models.Common.TaskPriority.Moderate:
                                    @:Moderate
                                        break;
                                case (short)Models.Common.TaskPriority.High:
                                    @:High
                                        break;
                            }
                        }
                    </td>
                    <td>@taskk.ParentTaskName</td>
                </tr>
            }
        </tbody>
        @*<tbody data-bind="foreach: tasks">
                <tr>
                    <td data-bind="text: TaskName"></td>
                    <td data-bind="text: Status"></td>
                    <td data-bind="text: StartDate"></td>
                    <td data-bind="text: EndDate"></td>
                    <td data-bind="text: Progress"></td>
                    <td data-bind="text: TaskPriority"></td>
                    <td data-bind="text: ParentTask"></td>
                </tr>
            </tbody>*@
    </table>
    <h4>Add New</h4>
    <div class="row">
        <div class="col-md-3">
            <input type="text" data-bind="value: newTaskName" placeholder="Name" />
        </div>
        <div class="col-md-3">
            <select data-bind="value: newTaskStatus" class="form-control col-md-3">
                <option value="false">false</option>
                <option value="true">true</option>
            </select>
        </div>
    </div>
    <a class="btn btn-success uppercase" href="#" data-bind="click: addNewTask">Add</a>
</div>

@section scripts
                        {
    <script src="~/Js/Task/TaskModel.js"></script>
    <script src="~/Js/Task/TaskViewModel.js"></script>
    <script type="text/javascript">
        var tableColumns = [
            {
                "aTargets": [0],
                "sDefaultContent": "No Data",
                "bVisible": false,
                "mRender": function (data, type, full) {
                    var element;
                    var val;
                    var billDetailId;
                    val = full["BillDetailId"];
                    billDetailId = full["BillDetailId"];
                    element = '<a href="/BillDetail/AddEdit/' + billDetailId + '">' + val + '</a>';
                    return element;
                }
            },
            { "data": "AccountNumber" },
            { "data": "BillDate" },
            { "data": "ServiceNumber" },
            { "data": "ServiceType" },
            { "data": "ChargeType" },
            { "data": "Description" },
            { "data": "Quantity" },
            { "data": "InclGst" }
        ];

        var billDetails = $('#billDetails').dataTable({
            "iDisplayLength": 11,
            "displayStart": start || 0,
            "bLengthChange": false,
            "aaSorting": [sortBy],
            "bFilter": false,
            "bProcessing": true,
            "oLanguage": {
                sProcessing: '<img src="/Content/Images/loader.gif">',
                "sEmptyTable": "No records available in the database."
            },
            "columns": tableColumns,
            "processing": true,
            "serverSide": true,

            "ajax": {
                url: "/BillDetail/Index",
                type: "POST",
                dataType: "json",
                data: function (params) {
                    debugger;
                    params.PageNo = Math.ceil(params.start / params.length) + 1;
                    if (params.PageNo === 0) {
                        params.PageNo = 1;
                    }
                    params.PageSize = params.length;
                    //params.SortBy = params.order[0].column;
                    params.IsAsc = params.order[0].dir === "asc";

                    params.BillDetailId = $('#BillDetailId').val();
                    params.AccountNumber = $('#AccountNumber').val();
                    params.BillDate = $('#BillDate').val();
                    params.ServiceNumber = $('#ServiceNumber').val();
                    params.ServiceType = $('#ServiceType').val();
                    params.ChargeType = $('#ChargeType').val();
                    params.Description = $('#Description').val();
                    params.Quantity = $('#Quantity').val();
                    params.InclGst = $('#InclGst').val();
                }
            },
            sDom: 'C<"clear">lfrtip',
            colVis: {
                order: 'alfa',
                'buttonText': 'Show/Hide Columns'
            }
        });
    </script>
}
